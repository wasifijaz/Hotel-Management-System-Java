/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OOPproject;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell4
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    List<RoomDataPOJO> roomDataList;
    DbManager db;
    int roomBook;
    int uPT = 0;
    int uCB = 0;
    int uFF = 0;
    
    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    String query;
    
    public Admin() {
        roomBook =0;
        roomDataList = new ArrayList();
        db = new DbManager();
        try
        {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            con = DriverManager.getConnection("jdbc:ucanaccess://D:\\OOP Project\\Project\\Mydb.accdb");
         
            String query;
            query = "SELECT * FROM RoomsData";
            ps = con.prepareStatement(query);
            rs = ps.executeQuery();
            
            while(rs.next()){
                roomDataList.add(new RoomDataPOJO(rs.getInt("ID"), rs.getString("Room Type"), rs.getInt("Total Rooms"), rs.getInt("Available")));
            }
        }
        catch(ClassNotFoundException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        initComponents();
        LoadMemberTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        callReservationbtn = new javax.swing.JButton();
        transactionBtn = new javax.swing.JButton();
        deleteGuestbtn = new javax.swing.JButton();
        searchNamebtn = new javax.swing.JButton();
        searchNameText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        searchIDbtn = new javax.swing.JButton();
        searchIDText = new javax.swing.JTextField();
        addFood = new javax.swing.JButton();
        food = new javax.swing.JTextField();
        aCB = new javax.swing.JCheckBox();
        aFF = new javax.swing.JCheckBox();
        aPT = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(795, 600));
        setSize(new java.awt.Dimension(600, 600));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(795, 600));
        jPanel1.setLayout(null);

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        jPanel1.add(backBtn);
        backBtn.setBounds(20, 520, 55, 21);

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\OOP Project\\serena-hotels-black.png")); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(670, 0, 100, 130);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Welcome to Serena Hotel");
        jLabel2.setToolTipText("");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(230, 0, 330, 90);

        jLabel3.setIcon(new javax.swing.ImageIcon("D:\\OOP Project\\serena-hotels-black.png")); // NOI18N
        jLabel3.setText("jLabel1");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 0, 100, 130);

        callReservationbtn.setBackground(new java.awt.Color(0, 0, 0));
        callReservationbtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        callReservationbtn.setForeground(new java.awt.Color(255, 255, 255));
        callReservationbtn.setText("Call Reservation");
        callReservationbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                callReservationbtnActionPerformed(evt);
            }
        });
        jPanel1.add(callReservationbtn);
        callReservationbtn.setBounds(20, 260, 150, 30);

        transactionBtn.setBackground(new java.awt.Color(0, 0, 0));
        transactionBtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        transactionBtn.setForeground(new java.awt.Color(255, 255, 255));
        transactionBtn.setText("Transections");
        transactionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionBtnActionPerformed(evt);
            }
        });
        jPanel1.add(transactionBtn);
        transactionBtn.setBounds(20, 300, 150, 30);

        deleteGuestbtn.setBackground(new java.awt.Color(0, 0, 0));
        deleteGuestbtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        deleteGuestbtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteGuestbtn.setText("Delete Guest by ID");
        deleteGuestbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteGuestbtnActionPerformed(evt);
            }
        });
        jPanel1.add(deleteGuestbtn);
        deleteGuestbtn.setBounds(20, 220, 150, 30);

        searchNamebtn.setBackground(new java.awt.Color(0, 0, 0));
        searchNamebtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        searchNamebtn.setForeground(new java.awt.Color(255, 255, 255));
        searchNamebtn.setText("Search");
        searchNamebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchNamebtnActionPerformed(evt);
            }
        });
        jPanel1.add(searchNamebtn);
        searchNamebtn.setBounds(470, 170, 150, 30);

        searchNameText.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        searchNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchNameTextActionPerformed(evt);
            }
        });
        jPanel1.add(searchNameText);
        searchNameText.setBounds(230, 170, 230, 30);

        jTable1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Contact", "Email", "CNIC", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(230, 220, 540, 120);

        jLabel17.setBackground(new java.awt.Color(0, 0, 0));
        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Admin Main");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(320, 60, 150, 50);

        jTable2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        jTable2.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Checkin", "Checkout", "Room Type", "No of Rooms"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(230, 410, 540, 120);

        searchIDbtn.setBackground(new java.awt.Color(0, 0, 0));
        searchIDbtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        searchIDbtn.setForeground(new java.awt.Color(255, 255, 255));
        searchIDbtn.setText("Search");
        searchIDbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchIDbtnActionPerformed(evt);
            }
        });
        jPanel1.add(searchIDbtn);
        searchIDbtn.setBounds(470, 360, 150, 30);

        searchIDText.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        searchIDText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchIDTextActionPerformed(evt);
            }
        });
        jPanel1.add(searchIDText);
        searchIDText.setBounds(230, 360, 230, 30);

        addFood.setBackground(new java.awt.Color(0, 0, 0));
        addFood.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        addFood.setForeground(new java.awt.Color(255, 255, 255));
        addFood.setText("Add Food");
        addFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFoodActionPerformed(evt);
            }
        });
        jPanel1.add(addFood);
        addFood.setBounds(20, 470, 150, 30);

        food.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jPanel1.add(food);
        food.setBounds(20, 349, 150, 20);

        aCB.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        aCB.setForeground(new java.awt.Color(255, 255, 255));
        aCB.setText("Chinese Bowl");
        aCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aCBActionPerformed(evt);
            }
        });
        jPanel1.add(aCB);
        aCB.setBounds(20, 410, 150, 21);

        aFF.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        aFF.setForeground(new java.awt.Color(255, 255, 255));
        aFF.setText("Fast Food");
        aFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aFFActionPerformed(evt);
            }
        });
        jPanel1.add(aFF);
        aFF.setBounds(20, 440, 150, 21);

        aPT.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        aPT.setForeground(new java.awt.Color(255, 255, 255));
        aPT.setText("Pakistani Thali");
        aPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aPTActionPerformed(evt);
            }
        });
        jPanel1.add(aPT);
        aPT.setBounds(21, 380, 150, 21);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 800, 610);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void LoadMemberTable()
    {
        try{
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            con = DriverManager.getConnection("jdbc:ucanaccess://D:\\OOP Project\\Project\\Mydb.accdb");
            String query = "select * from UserPData";
            ps = con.prepareStatement(query);
            rs = ps.executeQuery();
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            while(rs.next())
            {
                Object[] row = new Object[6];
                row[0] = rs.getInt("ID");
                row[1] = rs.getString("Name");
                row[2] = rs.getString("Contact");
                row[3] = rs.getString("Email");
                row[4] = rs.getString("CNIC");
                row[5] = rs.getString("Gender");
                model.addRow(row); 
            }
            String query1 = "select * from UserRData";
            ps = con.prepareStatement(query1);
            rs = ps.executeQuery();
            DefaultTableModel model1 = (DefaultTableModel)jTable2.getModel();
            while(rs.next())
            {
                Object[] row = new Object[5];
                row[0] = rs.getString("ID");
                row[1] = rs.getString("Checkin");
                row[2] = rs.getString("Checkout");
                row[3] = rs.getString("Room Type");
                row[4] = rs.getInt("No of Rooms");
                model1.addRow(row);
            }
        }
        catch(ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        this.setVisible(false);
        Reception rec = new Reception ();
        rec.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_backBtnActionPerformed

    private void callReservationbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_callReservationbtnActionPerformed
        this.setVisible(false);
        AddGuest ag = new AddGuest();
        ag.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_callReservationbtnActionPerformed

    private void transactionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionBtnActionPerformed
        this.setVisible(false);
        Revenue r = new Revenue();
        r.setVisible(true);
    }//GEN-LAST:event_transactionBtnActionPerformed

    private void deleteGuestbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteGuestbtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        String query;
        try 
        {
            int indexR = jTable1.getSelectedRow();
            int indexC = jTable1.getSelectedColumn();
            int value = (int) model.getValueAt(indexR, indexC);
            
            String roomType = jTable2.getValueAt(indexR, 3).toString();
            roomBook = (int) jTable2.getValueAt(indexR, 4);
            
            int deluxeRoom  =  roomDataList.get(0).getAvailRooms();
            int exeRoom     =  roomDataList.get(1).getAvailRooms();
            int jSuite      =  roomDataList.get(2).getAvailRooms();
            int exeSuite    =  roomDataList.get(3).getAvailRooms();
            int pSuite      =  roomDataList.get(4).getAvailRooms();
            
            
            if(roomType.equals("Deluxe Room"))
            {
                deluxeRoom += roomBook;
                db.updataRoom(1, deluxeRoom);
            }
            else if(roomType.equals("Executive Room") )
            {
                exeRoom += roomBook;
                db.updataRoom(2, exeRoom);
            }
            else if(roomType.equals("Juinor Suite") )
            {
                jSuite += roomBook;
                db.updataRoom(3, jSuite);
            }
            else if(roomType.equals("Executive Suite") )
            {
                exeSuite += roomBook;
                db.updataRoom(4, exeSuite);
            }
            else
            {
                pSuite += roomBook;
                db.updataRoom(5, pSuite);
            }
                        
            DeleteData d = new DeleteData(value);
            d.Delete();
            
            
            if(d.getResult1() > 0 && d.getResult2() > 0 && d.getResult3() > 0 && d.getResult4() > 0)
            {
                JOptionPane.showMessageDialog(null, "Member deleted sucessfully");
                model.removeRow(indexR);
                model2.removeRow(indexR);
            }
        }
        catch (HeadlessException | ClassNotFoundException e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_deleteGuestbtnActionPerformed

    private void searchNamebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchNamebtnActionPerformed
        UserDatabyName();            // TODO add your handling code here:
    }//GEN-LAST:event_searchNamebtnActionPerformed

    private void searchNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchNameTextActionPerformed

    private void searchIDbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchIDbtnActionPerformed
        UserDatabyID();// TODO add your handling code here:
    }//GEN-LAST:event_searchIDbtnActionPerformed

    private void searchIDTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchIDTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchIDTextActionPerformed

    private void addFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFoodActionPerformed
         try
         {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            con = DriverManager.getConnection("jdbc:ucanaccess://D:\\OOP Project\\Project\\Mydb.accdb");
            query = "select * from CheckFood";
            ps = con.prepareStatement(query);
            rs = ps.executeQuery();
            while (rs.next())
            {
                uPT = rs.getInt("Pakistani Thali");
                uCB = rs.getInt("Chinese Bowl");
                uFF = rs.getInt("Fast Food");
            }
            
            int add = 0;
            
            if (aPT.isSelected())
            {
                add = Integer.parseInt(food.getText());
                uPT+=add;
            }
            if (aCB.isSelected())
            {
                add = Integer.parseInt(food.getText());
                uCB+=add;
            }
            if (aFF.isSelected())
            {
                add = Integer.parseInt(food.getText());
                uFF+=add;
            }
            
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
            con = DriverManager.getConnection("jdbc:ucanaccess://D:\\OOP Project\\Project\\Mydb.accdb");
            query = "Update CheckFood set [Pakistani Thali] = ?, [Chinese Bowl] = ?, [Fast Food] = ?";
            ps = con.prepareStatement(query);
            ps.setInt(1, uPT);
            ps.setInt(2, uCB);
            ps.setInt(3, uFF);
            int doneUpdate = ps.executeUpdate();
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Services.class.getName()).log(Level.SEVERE, null, ex);
        }                // TODO add your handling code here:
    }//GEN-LAST:event_addFoodActionPerformed

    private void aCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aCBActionPerformed

    private void aFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aFFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aFFActionPerformed

    private void aPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aPTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aPTActionPerformed
    public void UserDatabyName()
    {
        if(!searchNameText.getText().equals(""))
        {
            try{
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
                con = DriverManager.getConnection("jdbc:ucanaccess://D:\\OOP Project\\Project\\Mydb.accdb");
                String query = "select * from UserPData where Name = ?";
                ps = con.prepareStatement(query);
                String UserName = searchNameText.getText();
                ps.setString(1,UserName);
                rs = ps.executeQuery();
                DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                model.setRowCount(0); 
                while(rs.next())
                {
                    Object[] row = new Object[6];
                    row[0] = rs.getInt("ID");
                    row[1] = rs.getString("Name");
                    row[2] = rs.getString("Contact");
                    row[3] = rs.getString("Email");
                    row[4] = rs.getString("CNIC");
                    row[5] = rs.getString("Gender");
                    model.addRow(row); 
                }
            }
            catch(ClassNotFoundException | SQLException e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        else{
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0); 
            LoadMemberTable();
        }
    }
    
    public void UserDatabyID()
    {
        if(!searchIDText.getText().equals(""))
        {
            try
            {
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
                con = DriverManager.getConnection("jdbc:ucanaccess://D:\\OOP Project\\Project\\Mydb.accdb");
                String query = "select * from UserRData where ID = ?";
                ps = con.prepareStatement(query);
                String id = searchIDText.getText();
                ps.setString(1,id);
                rs = ps.executeQuery();
                DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
                model.setRowCount(0); 
                while(rs.next())
                {
                    Object[] row = new Object[5];
                    row[0] = rs.getInt("ID");
                    row[1] = rs.getString("Checkin");
                    row[2] = rs.getString("Checkout");
                    row[3] = rs.getString("Room Type");
                    row[4] = rs.getString("No of Rooms");
                    model.addRow(row); 
                }
            }
            catch(ClassNotFoundException | SQLException e)
            {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        else{
            DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
            model.setRowCount(0); 
             LoadMemberTable();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //UserData();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() 
            {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox aCB;
    private javax.swing.JCheckBox aFF;
    private javax.swing.JCheckBox aPT;
    private javax.swing.JButton addFood;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton callReservationbtn;
    private javax.swing.JButton deleteGuestbtn;
    private javax.swing.JTextField food;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField searchIDText;
    private javax.swing.JButton searchIDbtn;
    private javax.swing.JTextField searchNameText;
    private javax.swing.JButton searchNamebtn;
    private javax.swing.JButton transactionBtn;
    // End of variables declaration//GEN-END:variables
}
